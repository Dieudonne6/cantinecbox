use Illuminate\Support\Facades\DB;

    public function reductioncollective(){
        $reductions = DB::table('reduction')->get();
        $eleves = Eleve::all();
        $classes = Classes::all();
        return view('pages.inscriptions.reductioncollective', compact('classes', 'eleves', 'reductions'));
    }
    
    public function recupmatricule(Request $request){
        $string = $request->input('eleves');
        $array = explode(' ', $string);
    }

    public function applyReductions(Request $request)
    {
        $reduction = Reduction::find($request->input('reduction'));

        if (!$reduction) {
            return redirect()->back()->with('error', 'La classe ou la réduction n\'existe pas');
        }
        foreach ($request->input('eleves') as $eleveData) {
            $array = explode(' ', $eleveData); // Sépare la chaîne par espaces
            $eleveId = intval(array_pop($array)); // Récupère le dernier élément et le convertit en entier
            
            // Trouver l'élève par ID
            $eleve = Eleve::find($eleveId);

            if ($eleve) {
                $eleve->CodeReduction = $reduction->CodeReduction;
                $eleve->update();
            }
        }
        
        return redirect()->back()->with('success', 'Réductions appliquées avec succès');
    }



    Route::get('/listedesclasses', [ClassesController::class, 'listeclasses']);
Route::post('/appliquereduc', [PagesController::class, 'applyReductions']);
Route::get('/generer-factures', [ClassesController::class, 'genererfacture']);

public function fauteupdate(Request $request, $id)
{
    $faute = Faute::where('IDFAUTES', $id)->first();
    
    if (!$faute) {
        // Vous pouvez soit rediriger, soit afficher un message d'erreur personnalisé.
        return redirect()->route('discipline')->with('error', 'Faute non trouvée.');
    }
    
    dd($id);  // Affiche l'ID pour le débogage

    // Mise à jour des informations si la faute existe
    $faute->update($request->all());
    
    return redirect()->route('discipline')->with('success', 'Faute et sanction modifiées avec succès.');
}

--------------------------------------------------------------------------------------------------------------------------------------
public function Tstore(Request $request)
{
    $data = $request->validate([
        'LibelFaute' => 'required|string|max:255',
        'Sanction_Indicative' => 'required|string|max:255',
        'Sanction_en_heure' => 'required|integer',
        'Sanction_en_points' => 'required|integer',
    ]);
    $absencess = $request->has('absence') ? 1 : 0;
    $tfaute = new Tfautes();
    $tfaute->LibelFaute = $request->input("LibelFaute");
    $tfaute->Sanction_Indicative = $request->input("Sanction_Indicative");
    $tfaute->Sanction_en_heure = $request->input("Sanction_en_heure");
    $tfaute->Sanction_en_points = $request->input("Sanction_en_points");
    $tfaute->Absence_ = $absencess;
    $tfaute->save();
/*     Tfautes::create($data); 
 */
    return redirect()->route('discipline')->with('success', 'Faute et sanction ajoutées avec succès.');
}

public function Tupdate(Request $request, $id)
{    
    try {
        $data = $request->validate([
            'LibelFaute' => 'required|string|max:255',
            'Sanction_Indicative' => 'nullable|string|max:255',
            'Sanction_en_heure' => 'required|integer',
            'Sanction_en_points' => 'required|integer',
        ]);
    } catch (\Illuminate\Validation\ValidationException $e) {
        
        dd($e->errors());
    }
    $tfaute = Tfautes::where('idTFautes', $id)->firstOrFail();
    $tfaute->Absence_ = $request->has('absence') ? 1 : 0;
    $tfaute->update($data);
    $tfaute->save();
    return redirect()->route('discipline')->with('success', 'Faute et sanction modifiées avec succès.');
}
----------------------------------------
 <!-- Bouton Modifier -->
 <button class="btn btn-primary btn-sm" data-bs-toggle="modal"
                                                        data-bs-target="#editFauteModal"
                                                        data-id="{{ $tfaute->idTFautes }}"
                                                        data-libelfaute="{{ $tfaute->LibelFaute }}"
                                                        data-sanctionindicative="{{ $tfaute->Sanction_Indicative }}"
                                                        data-sanctionheure="{{ $tfaute->Sanction_en_heure }}"
                                                        data-sanctionpoints="{{ $tfaute->Sanction_en_points }}"
                                                        data-absence="{{ $tfaute->Absence_ }}">
                                                        <i class="bi bi-pencil-fill"></i> Modifier
                                                    </button>

                                                    <label class="checkbox-container">
                            <input class="custom-checkbox" name="absence" value="1" type="checkbox">
                            <span class="checkmark"></span>
                            Cocher si c'est une absence
                        </label>
---------------------------------------------------------------------
<div class="modal fade" id="addFauteModal" tabindex="-1" aria-labelledby="addFauteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addFauteModalLabel">Ajouter une Faute et Sanction</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form action="{{ route('faute.store') }}" method="POST">
                    @csrf
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="LibelFaute" class="form-label">Libellé faute</label>
                            <input type="text" class="form-control" id="LibelFaute" name="LibelFaute" required>
                        </div>
                        <div class="mb-3">
                            <label for="Sanction_Indicative" class="form-label">Sanction prévue</label>
                            <input type="text" class="form-control" id="Sanction_Indicative"
                                name="Sanction_Indicative" required>
                        </div>
                        <div class="mb-3">
                            <label for="Sanction_en_heure" class="form-label">En heure</label>
                            <input type="number" class="form-control" id="Sanction_en_heure" name="Sanction_en_heure"
                                required>
                        </div>
                        <div class="mb-3">
                            <label for="Sanction_en_points" class="form-label">En point</label>
                            <input type="number" class="form-control" id="Sanction_en_points" name="Sanction_en_points"
                                required>
                        </div>
                        <label class="checkbox-container">
                            <input class="custom-checkbox" name="absence" value="1" type="checkbox">
                            <span class="checkmark"></span>
                            Cocher si c'est une absence
                        </label>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                        <button type="submit" class="btn btn-primary">Ajouter</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modale de Modification -->
    <div class="modal fade" id="editFauteModal" tabindex="-1" aria-labelledby="editFauteModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editFauteModalLabel">Modifier Faute et Sanction</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form method="POST" id="editFauteForm">
                    @csrf
                    @method('PUT')
                    <div class="modal-body">
                        <input type="hidden" name="idTFautes" id="edit_idTFautes">

                        <div class="mb-3">
                            <label for="edit_LibelFaute" class="form-label">Libellé faute</label>
                            <input type="text" class="form-control" id="edit_LibelFaute" name="LibelFaute">
                        </div>
                        <div class="mb-3">
                            <label for="edit_Sanction_Indicative" class="form-label">Sanction prévue</label>
                            <input type="text" class="form-control" id="edit_Sanction_Indicative"
                                name="Sanction_Indicative">
                        </div>
                        <div class="mb-3">
                            <label for="edit_Sanction_en_heure" class="form-label">En heure</label>
                            <input type="number" class="form-control" id="edit_Sanction_en_heure"
                                name="Sanction_en_heure">
                        </div>
                        <div class="mb-3">
                            <label for="edit_Sanction_en_points" class="form-label">En point</label>
                            <input type="number" class="form-control" id="edit_Sanction_en_points"
                                name="Sanction_en_points">
                        </div>
                        <label for="edit_absence" class="checkbox-container">
                            <input class="custom-checkbox" name="absence"id="edit_absence" type="checkbox">
                            <span class="checkmark"></span>
                            Cocher si c'est une absence
                        </label>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                        <button type="submit" class="btn btn-primary">Modifier</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
document.addEventListener('DOMContentLoaded', function() {
    var editFauteModal = document.getElementById('editFauteModal');
    editFauteModal.addEventListener('show.bs.modal', function(event) {
        var button = event.relatedTarget;
        var idTFautes = button.getAttribute('data-id');
        var LibelFaute = button.getAttribute('data-libelfaute');
        var Sanction_Indicative = button.getAttribute('data-sanctionindicative');
        var Sanction_en_heure = button.getAttribute('data-sanctionheure');
        var Sanction_en_points = button.getAttribute('data-sanctionpoints');
        var absence = button.getAttribute('data-absence');

        var form = document.getElementById('editFauteForm');
        form.action = "{{ route('faute.update', '') }}/" + idTFautes;

        document.getElementById('edit_idTFautes').value = idTFautes;
        document.getElementById('edit_LibelFaute').value = LibelFaute;
        document.getElementById('edit_Sanction_Indicative').value = Sanction_Indicative;
        document.getElementById('edit_Sanction_en_heure').value = Sanction_en_heure;
        document.getElementById('edit_Sanction_en_points').value = Sanction_en_points;

        // Gérer l'état de la case à cocher absence
        document.getElementById('edit_absence').checked = (absence == 1); // Coche si absence vaut 1
    });
});

<style>
    /* From Uiverse.io by DaniloMGutavo */ 
.checkbox-container {
  display: inline-block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 16px;
  user-select: none;
}

.custom-checkbox {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
  border-radius: 4px;
  transition: background-color 0.3s;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.checkmark:after {
  content: "";
  position: absolute;
  display: none;
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  transform: rotate(45deg);
}

.custom-checkbox:checked ~ .checkmark {
  background-color: #2196F3;
  box-shadow: 0 3px 7px rgba(33, 150, 243, 0.3);
}

.custom-checkbox:checked ~ .checkmark:after {
  display: block;
}

@keyframes checkAnim {
  0% {
    height: 0;
  }

  100% {
    height: 10px;
  }
}

.custom-checkbox:checked ~ .checkmark:after {
  animation: checkAnim 0.2s forwards;
}

</style>